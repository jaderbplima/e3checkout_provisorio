{"version":3,"file":"static/webpack/static/development/pages/index.js.f493f7ad618931beb785.hot-update.js","sources":["webpack:///./components/checkout/User.js"],"sourcesContent":["import { Component } from 'react'\nimport { Grid, Segment, Button, Loader, Dimmer, Form, Input, Icon, Responsive, Header, Step, Label, Radio, Accordion, Table, Item, Image} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { showEditUser } from '../../actions/checkout'\n\nimport 'react-credit-cards/es/styles-compiled.css'\n\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass User extends Component {\n  constructor() {\n    super()\n  }\n  handleClickOnEdit = (e) => {\n    e.preventDefault();\n    console.log('handleClickOnEdit')\n    const { showEditUser } = this.props\n    showEditUser()\n  }\n  handleClickOnEditUser2 = async (e) => {\n    e.preventDefault();\n    this.setState({ user: { buttonLoading: true, status: 'editing' }})\n    await sleep(2000);\n    this.setState({ user: { status: 'ok', buttonLoading: false }})\n  }\n  render(){\n    const disabled = this.props.userSegment.view == 'disabled' ? true : false\n    return (\n      <>\n        {(['enabled', 'disabled'].includes(this.props.userSegment.view)) && (\n          <Segment.Group>\n            {this.props.userSegment.loading && (\n              <Dimmer active inverted>\n                <Loader size='small'>Loading</Loader>\n              </Dimmer>\n            )}\n            <Segment disabled={disabled} onClick={this.handleClickOnEdit} style={{cursor: \"pointer\"}}>\n              <Header as='h4'>\n                <Icon name='user' />\n                <Header.Content>\n                  1. Dados Pessoais <Icon name='check' color='green'/>\n                </Header.Content>\n              </Header>\n              <p style={{fontSize: '12px'}}>Solicitamos apenas as informações essenciais para a realização da compra. </p>\n              <p>+ alterar informações</p>\n            </Segment>\n            <Segment disabled={disabled}>\n              <Header size='small' style={{margin: 0}}>Jader Bruno Pereira Lima</Header>\n              <p style={{margin: 0}}>jaderpereiralima@gmail.com</p>\n              <p style={{margin: 0}}>CPF 39137790862</p>\n              <p style={{margin: 0}}>16 98114-7732</p>\n            </Segment>\n          </Segment.Group>\n        )}\n        {(this.props.userSegment.view === 'edit') && (\n          <Segment.Group >\n            {this.props.userSegment.loading && (\n              <Dimmer active inverted>\n                <Loader size='small'>Loading</Loader>\n              </Dimmer>\n            )}\n            <Segment>\n              <Header as='h4'>\n                <Icon name='user' />\n                <Header.Content>\n                  1. Dados Pessoais <Icon name='check' color='green'/>\n                </Header.Content>\n              </Header>\n              <p style={{fontSize: '12px'}}>Solicitamos apenas as informações essenciais para a realização da compra. </p>\n            </Segment>\n            <Segment>\n              <Form>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>Nome Completo</label>\n                    <Input icon value='Jader Bruno Pereira Lima'>\n                      <input />\n                      <Icon name='check' color='green'/>\n                    </Input>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>E-mail</label>\n                    <Input icon value='jaderpereiralima@gmail.com'>\n                      <input />\n                      <Icon name='check' color='green'/>\n                    </Input>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>CPF</label>\n                    <Input icon value='39137790862'>\n                      <input />\n                      <Icon name='check' color='green'/>\n                    </Input>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>Telefone ou Celular</label>\n                    <Input icon value='16 98114-7732'>\n                      <input />\n                      <Icon name='check' color='green'/>\n                    </Input>\n                  </Form.Field>\n                </Form.Group>\n              </Form>\n            </Segment>\n            <Segment>\n              <Button fluid color='blue' onClick={this.handleClickOnEditUser2} loading={this.props.userSegment.buttonLoading}>\n                Continuar<Icon name='arrow right'/>\n              </Button>\n            </Segment>\n          </Segment.Group>\n        )}\n      </>\n    )\n  }\n}\n\nfunction mapStateToProps (store) {\n  const { checkoutState } = store\n  const { userSegment } = checkoutState\n  return { userSegment }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ showEditUser }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(User)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;;;AAYA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;;;;AA9GA;AACA;AAgHA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAEA;;;;A","sourceRoot":""}