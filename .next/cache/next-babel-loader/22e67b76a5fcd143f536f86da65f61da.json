{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Component } from 'react';\nimport { Grid, Segment, Button, Form, Input, Icon, Responsive, Header, Label, Radio, Accordion, Select, Dimmer, Loader } from 'semantic-ui-react';\nimport Cards from 'react-credit-cards';\nimport 'react-credit-cards/es/styles-compiled.css';\nimport { formatMoney, sleep } from '../../lib/utils';\n\nvar Payment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Payment, _Component);\n\n  function Payment() {\n    var _this;\n\n    _classCallCheck(this, Payment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payment).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePaymentMethodChange\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var newState;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                newState = _Object$assign({}, _this.state);\n                newState.paymentMethodLoading = true;\n\n                _this.setState(newState);\n\n                _context.next = 5;\n                return sleep(500);\n\n              case 5:\n                newState = _Object$assign({}, _this.state);\n                newState.paymentMethodLoading = false;\n\n                _this.setState(newState);\n\n                _this.setState({\n                  selectedPaymentMethod: e\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.handleChangeOnCardForm = _this.handleChangeOnCardForm.bind(_assertThisInitialized(_this));\n    _this.state = {\n      card: {\n        number: '',\n        name: '',\n        expiry: '',\n        cvc: '',\n        focused: 'number'\n      },\n      installmentOptions: [{\n        key: '1',\n        value: '1',\n        text: '1x de R$ 158,90'\n      }, {\n        key: '2',\n        value: '2',\n        text: '2x de R$ 76,82'\n      }, {\n        key: '3',\n        value: '3',\n        text: '3x de R$ 45,90'\n      }],\n      selectedPaymentMethod: 'boleto',\n      paymentMethodLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Payment, [{\n    key: \"handleChangeOnCardForm\",\n    value: function handleChangeOnCardForm(e) {\n      e.preventDefault();\n\n      var newState = _Object$assign({}, this.state);\n\n      newState.card[e.target.name] = e.target.value;\n      newState.card.focused = e.target.name;\n      this.setState(newState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Segment.Group, null, React.createElement(Segment, null, React.createElement(Header, {\n        as: \"h4\"\n      }, React.createElement(Icon, {\n        name: \"credit card\"\n      }), React.createElement(Header.Content, null, \"3. Pagamento\")), React.createElement(\"p\", {\n        style: {\n          fontSize: '12px'\n        }\n      }, \"Escolha abaixo uma forma de pagamento\"), React.createElement(Accordion, {\n        styled: true\n      }, React.createElement(Accordion.Title, {\n        active: true,\n        onClick: function onClick() {\n          return _this2.handlePaymentMethodChange('creditCard');\n        }\n      }, this.state.paymentMethodLoading && React.createElement(Dimmer, {\n        active: true,\n        inverted: true\n      }, React.createElement(Loader, {\n        size: \"small\"\n      }, \"Loading\")), React.createElement(Grid, null, React.createElement(Grid.Row, {\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Column, {\n        width: 1\n      }, React.createElement(Radio, {\n        name: \"radioGroup\",\n        value: \"this\",\n        checked: this.state.selectedPaymentMethod === 'creditCard',\n        onChange: this.handleChange\n      })), React.createElement(Grid.Column, {\n        width: 14\n      }, React.createElement(\"p\", null, React.createElement(Icon, {\n        name: \"credit card\"\n      }), React.createElement(\"b\", null, \"Cart\\xE3o de cr\\xE9dito\")))))), React.createElement(Accordion.Content, {\n        active: this.state.selectedPaymentMethod === 'creditCard'\n      }, !this.props.mobile && React.createElement(Responsive, {\n        minWidth: 1200\n      }, React.createElement(Cards, {\n        number: this.state.card.number,\n        name: this.state.card.name,\n        expiry: this.state.card.expiry,\n        cvc: this.state.card.cvc,\n        focused: this.state.card.focused\n      }), React.createElement(\"br\", null)), this.props.mobile && React.createElement(React.Fragment, null, React.createElement(Cards, {\n        number: this.state.card.number,\n        name: this.state.card.name,\n        expiry: this.state.card.expiry,\n        cvc: this.state.card.cvc,\n        focused: this.state.card.focused\n      }), React.createElement(\"br\", null)), React.createElement(Form, {\n        size: \"tiny\"\n      }, React.createElement(Form.Group, null, React.createElement(Form.Field, {\n        width: 10\n      }, React.createElement(\"label\", null, \"N\\xFAmero do cart\\xE3o\"), React.createElement(Input, {\n        icon: true,\n        placeholder: \"\",\n        name: \"number\",\n        value: this.state.card.number,\n        onChange: this.handleChangeOnCardForm\n      }, React.createElement(\"input\", null), React.createElement(Icon, {\n        name: \"check\",\n        color: \"green\"\n      }))), React.createElement(Form.Field, {\n        width: 6\n      }, React.createElement(\"label\", null, \"Validade\"), React.createElement(Input, {\n        icon: true,\n        placeholder: \"MM/AA\",\n        name: \"expiry\",\n        value: this.state.card.expiry,\n        onChange: this.handleChangeOnCardForm\n      }, React.createElement(\"input\", null), React.createElement(Icon, {\n        name: \"check\",\n        color: \"green\"\n      })))), React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, React.createElement(Form.Field, {\n        width: 10\n      }, React.createElement(\"label\", null, \"Nome impresso no cart\\xE3o\"), React.createElement(Input, {\n        icon: true,\n        name: \"name\",\n        value: this.state.card.name,\n        onChange: this.handleChangeOnCardForm\n      }, React.createElement(\"input\", null), React.createElement(Icon, {\n        name: \"check\",\n        color: \"green\"\n      }))), React.createElement(Form.Field, {\n        width: 6\n      }, React.createElement(\"label\", null, \"CVC\"), React.createElement(Input, {\n        icon: true,\n        name: \"cvc\",\n        value: this.state.card.cvc,\n        onChange: this.handleChangeOnCardForm\n      }, React.createElement(\"input\", null), React.createElement(Icon, {\n        name: \"check\",\n        color: \"green\"\n      })))), React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, React.createElement(Form.Field, null, React.createElement(\"label\", null, \"CPF do titular\"), React.createElement(Input, {\n        icon: true,\n        value: \"391.377.908-62\"\n      }, React.createElement(\"input\", null), React.createElement(Icon, {\n        name: \"check\",\n        color: \"green\"\n      })))), React.createElement(Form.Group, {\n        widths: \"equal\"\n      }, React.createElement(Form.Field, null, React.createElement(\"label\", null, \"Parcelas\"), React.createElement(Select, {\n        placeholder: \"\",\n        options: this.state.installmentOptions\n      })))), React.createElement(Button, {\n        fluid: true,\n        color: \"green\"\n      }, React.createElement(Icon, {\n        name: \"lock\"\n      }), \"Comprar agora\")), React.createElement(Accordion.Title, {\n        active: true,\n        onClick: function onClick() {\n          return _this2.handlePaymentMethodChange('boleto');\n        }\n      }, React.createElement(Grid, null, React.createElement(Grid.Row, {\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Column, {\n        width: 1\n      }, React.createElement(Radio, {\n        name: \"radioGroup\",\n        value: \"this\",\n        checked: this.state.selectedPaymentMethod === 'boleto',\n        onChange: this.handleChange\n      })), React.createElement(Grid.Column, {\n        width: 14\n      }, React.createElement(\"p\", null, React.createElement(Icon, {\n        name: \"barcode\"\n      }), React.createElement(\"b\", null, \"Boleto\")))))), React.createElement(Accordion.Content, {\n        active: this.state.selectedPaymentMethod === 'boleto'\n      }, React.createElement(\"p\", null, \"Somente quando recebermos a confirma\\xE7\\xE3o, em at\\xE9 48h ap\\xF3s o pagamento, seguiremos com o envio das suas compras. O prazo de entrega passa a ser contado somente ap\\xF3s a confirma\\xE7\\xE3o do pagamento.\"), React.createElement(Header, {\n        size: \"small\",\n        style: {\n          margin: 0\n        },\n        color: \"green\"\n      }, \"Valor do boleto: R$ 169,00\"), React.createElement(Button, {\n        fluid: true,\n        color: \"green\"\n      }, React.createElement(Icon, {\n        name: \"lock\"\n      }), \"Comprar agora\")), React.createElement(Accordion.Title, {\n        active: true,\n        onClick: function onClick() {\n          return _this2.handlePaymentMethodChange('deposit');\n        }\n      }, React.createElement(Grid, null, React.createElement(Grid.Row, {\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Column, {\n        width: 1\n      }, React.createElement(Radio, {\n        name: \"radioGroup\",\n        value: \"this\",\n        checked: this.state.selectedPaymentMethod === 'deposit',\n        onChange: this.handleChange\n      })), React.createElement(Grid.Column, {\n        width: 14\n      }, React.createElement(\"p\", null, React.createElement(Icon, {\n        name: \"money\"\n      }), React.createElement(\"b\", null, \"Dep\\xF3sito banc\\xE1rio\")))))), React.createElement(Accordion.Content, {\n        active: this.state.selectedPaymentMethod === 'deposit'\n      }, React.createElement(\"p\", null, \"Selecione o banco abaixo:\"), React.createElement(Segment.Group, null, React.createElement(Segment, null, React.createElement(Grid, {\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 1\n      }, React.createElement(Radio, {\n        name: \"radioGroup\",\n        value: \"this\",\n        checked: this.state.value === 'this',\n        onChange: this.handleChange\n      })), React.createElement(Grid.Column, {\n        width: 9\n      }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Bradesco\"))), React.createElement(Grid.Column, {\n        width: 3\n      }, React.createElement(Label, {\n        color: \"red\",\n        basic: true\n      }, \"Logo\"))))), React.createElement(Segment, null, React.createElement(Grid, {\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 1\n      }, React.createElement(Radio, {\n        name: \"radioGroup\",\n        value: \"this\",\n        checked: this.state.value === 'this'\n      })), React.createElement(Grid.Column, {\n        width: 9\n      }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Banco do Brasil\"))), React.createElement(Grid.Column, {\n        width: 3\n      }, React.createElement(Label, {\n        color: \"yellow\",\n        basic: true\n      }, \"Logo\"))))), React.createElement(Segment, null, React.createElement(Grid, {\n        verticalAlign: \"middle\"\n      }, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n        width: 1\n      }, React.createElement(Radio, {\n        name: \"radioGroup\",\n        value: \"this\",\n        checked: this.state.value === 'this'\n      })), React.createElement(Grid.Column, {\n        width: 9\n      }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Santander\"))), React.createElement(Grid.Column, {\n        width: 3\n      }, React.createElement(Label, {\n        color: \"red\",\n        basic: true\n      }, \"Logo\")))))), React.createElement(Header, {\n        size: \"small\",\n        style: {\n          margin: 0\n        },\n        color: \"green\"\n      }, \"Valor do dep\\xF3sito: R$ 169,00\"), React.createElement(Button, {\n        fluid: true,\n        color: \"green\"\n      }, React.createElement(Icon, {\n        name: \"lock\"\n      }), \"Comprar agora\"))))));\n    }\n  }]);\n\n  return Payment;\n}(Component);\n\nexport default Payment;","map":null,"metadata":{},"sourceType":"module"}