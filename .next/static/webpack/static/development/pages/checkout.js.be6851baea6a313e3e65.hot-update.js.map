{"version":3,"file":"static/webpack/static/development/pages/checkout.js.be6851baea6a313e3e65.hot-update.js","sources":["webpack:///./components/checkout/Payment.js"],"sourcesContent":["import { Component } from 'react'\nimport { Grid, Segment, Button, Form, Input, Icon, Responsive, Header, Label, Radio, Accordion, Select, Dimmer, Loader } from 'semantic-ui-react'\nimport Cards from 'react-credit-cards';\nimport 'react-credit-cards/es/styles-compiled.css'\nimport { formatMoney, sleep } from '../../lib/utils'\n\nclass Payment extends Component {\n  constructor() {\n    super()\n    this.handleChangeOnCardForm = this.handleChangeOnCardForm.bind(this);\n    this.state = {\n      card: {\n        number: '',\n        name: '',\n        expiry: '',\n        cvc: '',\n        focused: 'number'\n      },\n      installmentOptions: [\n        { key: '1', value: '1', text: '1x de R$ 158,90' },\n        { key: '2', value: '2', text: '2x de R$ 76,82' },\n        { key: '3', value: '3', text: '3x de R$ 45,90' },\n      ],\n      paymentMethodOptions: [\n        { key: '1', value: 'creditCard', loading: false },\n        { key: '2', value: 'boleto', loading: false },\n        { key: '3', value: 'deposit', loading: false },\n      ],\n      selectedPaymentMethod: 'boleto'\n    }\n  }\n  handlePaymentMethodChange = async (e) => {\n    const paymentMethodIndex = this.state.paymentMethodOptions.findIndex(x => x.value === e);\n\n    let newState = Object.assign({}, this.state);\n    newState.paymentMethodOptions[paymentMethodIndex].loading = true;\n    this.setState(newState)\n\n    await sleep(500);\n\n    newState = Object.assign({}, this.state);\n    newState.paymentMethodOptions[paymentMethodIndex].loading = false;\n    this.setState(newState)\n\n    this.setState({ selectedPaymentMethod: e })\n  }\n  handleChangeOnCardForm(e) {\n    e.preventDefault();\n    let newState = Object.assign({}, this.state);\n    newState.card[e.target.name] = e.target.value;\n    newState.card.focused = e.target.name;\n    this.setState(newState)\n  }\n  render(){\n    return (\n      <>\n        <Segment.Group >\n          <Segment>\n            <Header as='h4'>\n              <Icon name='credit card' />\n              <Header.Content>\n                3. Pagamento\n              </Header.Content>\n            </Header>\n            <p style={{fontSize: '12px'}}>Escolha abaixo uma forma de pagamento</p>\n            <Accordion styled>\n              <Accordion.Title active={true} onClick={() => this.handlePaymentMethodChange('creditCard')}>\n                {this.state.paymentMethodOptions[0].loading && (\n                  <Dimmer active inverted>\n                    <Loader size='small'></Loader>\n                  </Dimmer>\n                )}\n                <Grid >\n                  <Grid.Row verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                      <Radio\n                        name='radioGroup'\n                        value='this'\n                        checked={this.state.selectedPaymentMethod === 'creditCard'}\n                        onChange={this.handleChange}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                      <p><Icon name='credit card' /><b>Cartão de crédito</b></p>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Accordion.Title>\n              <Accordion.Content active={this.state.selectedPaymentMethod === 'creditCard'}>\n                {(!this.props.mobile) && (\n                  <Responsive minWidth={1200}>\n                    <Cards\n                      number={this.state.card.number}\n                      name={this.state.card.name}\n                      expiry={this.state.card.expiry}\n                      cvc={this.state.card.cvc}\n                      focused={this.state.card.focused}\n                    />\n                    <br></br>\n                  </Responsive>\n                )}\n                {(this.props.mobile) && (\n                  <>\n                    <Cards\n                      number={this.state.card.number}\n                      name={this.state.card.name}\n                      expiry={this.state.card.expiry}\n                      cvc={this.state.card.cvc}\n                      focused={this.state.card.focused}\n                    />\n                    <br></br>\n                  </>\n                )}\n                <Form size='tiny'>\n                  <Form.Group>\n                    <Form.Field width={10}>\n                      <label>Número do cartão</label>\n                      <Input icon placeholder='' name='number' value={this.state.card.number} onChange={this.handleChangeOnCardForm}>\n                        <input />\n                        <Icon name='check' color='green'/>\n                      </Input>\n                    </Form.Field>\n                    <Form.Field width={6}>\n                      <label>Validade</label>\n                      <Input icon placeholder='MM/AA' name='expiry' value={this.state.card.expiry} onChange={this.handleChangeOnCardForm}>\n                        <input />\n                        <Icon name='check' color='green'/>\n                      </Input>\n                    </Form.Field>\n                  </Form.Group>\n                  <Form.Group widths='equal'>\n                    <Form.Field width={10}>\n                      <label>Nome impresso no cartão</label>\n                      <Input icon name='name' value={this.state.card.name} onChange={this.handleChangeOnCardForm}>\n                        <input />\n                        <Icon name='check' color='green'/>\n                      </Input>\n                    </Form.Field>\n                    <Form.Field width={6}>\n                      <label>CVC</label>\n                      <Input icon name='cvc' value={this.state.card.cvc} onChange={this.handleChangeOnCardForm}>\n                        <input />\n                        <Icon name='check' color='green'/>\n                      </Input>\n                    </Form.Field>\n                  </Form.Group>\n                  <Form.Group widths='equal'>\n                    <Form.Field>\n                      <label>CPF do titular</label>\n                      <Input icon value='391.377.908-62'>\n                        <input />\n                        <Icon name='check' color='green'/>\n                      </Input>\n                    </Form.Field>\n                  </Form.Group>\n                  <Form.Group widths='equal'>\n                    <Form.Field>\n                      <label>Parcelas</label>\n                      <Select placeholder='' options={this.state.installmentOptions} />\n                    </Form.Field>\n                  </Form.Group>\n                </Form>\n                <Button fluid color='green'>\n                  <Icon name='lock'/>Comprar agora \n                </Button>\n              </Accordion.Content>\n              <Accordion.Title active={true} onClick={() => this.handlePaymentMethodChange('boleto')}>\n                <Grid>\n                  <Grid.Row verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                      <Radio\n                        name='radioGroup'\n                        value='this'\n                        checked={this.state.selectedPaymentMethod === 'boleto'}\n                        onChange={this.handleChange}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                      <p><Icon name='barcode' /><b>Boleto</b></p>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Accordion.Title>\n              <Accordion.Content active={this.state.selectedPaymentMethod === 'boleto'}>\n                <p>\n                  Somente quando recebermos a confirmação, em até 48h após o pagamento, seguiremos com o envio das suas compras. \n                  O prazo de entrega passa a ser contado somente após a confirmação do pagamento.\n                </p>\n                <Header size='small' style={{margin: 0}} color='green'>Valor do boleto: R$ 169,00</Header>\n                <Button fluid color='green'>\n                  <Icon name='lock'/>Comprar agora \n                </Button>\n              </Accordion.Content>\n              <Accordion.Title active={true} onClick={() => this.handlePaymentMethodChange('deposit')}>\n                <Grid>\n                  <Grid.Row verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                      <Radio\n                        name='radioGroup'\n                        value='this'\n                        checked={this.state.selectedPaymentMethod === 'deposit'}\n                        onChange={this.handleChange}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                      <p><Icon name='money' /><b>Depósito bancário</b></p>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid> \n              </Accordion.Title>\n              <Accordion.Content active={this.state.selectedPaymentMethod === 'deposit'}>\n                <p>\n                  Selecione o banco abaixo:\n                </p>\n                <Segment.Group>\n                  <Segment>\n                    <Grid verticalAlign='middle'>\n                      <Grid.Row >\n                        <Grid.Column width={1}>\n                          <Radio\n                            name='radioGroup'\n                            value='this'\n                            checked={this.state.value === 'this'}\n                            onChange={this.handleChange}\n                          />\n                        </Grid.Column>\n                        <Grid.Column width={9}>\n                          <p><b>Bradesco</b></p>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                          <Label color='red' basic>Logo</Label>\n                        </Grid.Column>\n                      </Grid.Row>\n                    </Grid>\n                  </Segment>\n                  <Segment>\n                    <Grid verticalAlign='middle'>\n                      <Grid.Row >\n                        <Grid.Column width={1}>\n                          <Radio\n                            name='radioGroup'\n                            value='this'\n                            checked={this.state.value === 'this'}\n                          />\n                        </Grid.Column>\n                        <Grid.Column width={9}>\n                          <p><b>Banco do Brasil</b></p>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                          <Label color='yellow' basic>Logo</Label>\n                        </Grid.Column>\n                      </Grid.Row>\n                    </Grid>\n                  </Segment>\n                  <Segment>\n                    <Grid verticalAlign='middle'>\n                      <Grid.Row >\n                        <Grid.Column width={1}>\n                          <Radio\n                            name='radioGroup'\n                            value='this'\n                            checked={this.state.value === 'this'}\n                          />\n                        </Grid.Column>\n                        <Grid.Column width={9}>\n                          <p><b>Santander</b></p>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                          <Label color='red' basic>Logo</Label>\n                        </Grid.Column>\n                      </Grid.Row>\n                    </Grid>\n                  </Segment>\n                </Segment.Group>\n                <Header size='small' style={{margin: 0}} color='green'>Valor do depósito: R$ 169,00</Header>\n                <Button fluid color='green'>\n                  <Icon name='lock'/>Comprar agora \n                </Button>\n              </Accordion.Content>\n            </Accordion>\n          </Segment>\n        </Segment.Group>      \n      </>\n    )\n  }\n}\nexport default Payment"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AANA;AAAA;AACA;AADA;AASA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAlBA;AAHA;AAuBA;AACA;;;AAetRA;AACA;AAuRA;;;;A","sourceRoot":""}