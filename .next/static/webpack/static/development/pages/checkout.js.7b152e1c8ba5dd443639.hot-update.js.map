{"version":3,"file":"static/webpack/static/development/pages/checkout.js.7b152e1c8ba5dd443639.hot-update.js","sources":["webpack:///./components/checkout/User.js"],"sourcesContent":["import { Component } from 'react'\nimport { Grid, Segment, Button, Loader, Dimmer, Form, Input, Icon, Responsive, Header, Step, Label, Radio, Accordion, Table, Item, Image} from 'semantic-ui-react'\nimport 'react-credit-cards/es/styles-compiled.css'\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass User extends Component {\n  constructor() {\n    super()\n    this.state = {\n      user: {\n        segmentLoading: false,\n        buttonLoading: false,\n        status: 'ok'\n      },\n    }\n  }\n\n  render(){\n    return (\n      <>\n        {this.state.user.status === 'ok' && (\n          <Segment.Group >\n            {this.state.user.segmentLoading && (\n              <Dimmer active inverted>\n                <Loader size='small'>Loading</Loader>\n              </Dimmer>\n            )}\n            <Segment onClick={this.handleClickOnEditUser} style={{cursor: \"pointer\"}}>\n              <Header as='h4'>\n                <Icon name='user' />\n                <Header.Content>\n                  1. Dados Pessoais <Icon name='check' color='green'/>\n                </Header.Content>\n              </Header>\n              <p style={{fontSize: '12px'}}>Solicitamos apenas as informações essenciais para a realização da compra. </p>\n              <p>+ alterar informações</p>\n            </Segment>\n            <Segment>\n              <Header size='small' style={{margin: 0}}>Jader Bruno Pereira Lima</Header>\n              <p style={{margin: 0}}>jaderpereiralima@gmail.com</p>\n              <p style={{margin: 0}}>CPF 39137790862</p>\n              <p style={{margin: 0}}>16 98114-7732</p>\n            </Segment>\n          </Segment.Group>\n        )}\n        {this.state.user.status === 'editing' && (\n          <Segment.Group >\n            {this.state.user.segmentLoading && (\n              <Dimmer active inverted>\n                <Loader size='small'>Loading</Loader>\n              </Dimmer>\n            )}\n            <Segment>\n              <Header as='h4'>\n                <Icon name='user' />\n                <Header.Content>\n                  1. Dados Pessoais <Icon name='check' color='green'/>\n                </Header.Content>\n              </Header>\n              <p style={{fontSize: '12px'}}>Solicitamos apenas as informações essenciais para a realização da compra. </p>\n            </Segment>\n            <Segment>\n              <Form>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>Nome Completo</label>\n                    <Input icon value='Jader Bruno Pereira Lima'>\n                      <input />\n                      <Icon name='check' color='green'/>\n                    </Input>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>E-mail</label>\n                    <Input icon value='jaderpereiralima@gmail.com'>\n                      <input />\n                      <Icon name='check' color='green'/>\n                    </Input>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>CPF</label>\n                    <Input icon value='39137790862'>\n                      <input />\n                      <Icon name='check' color='green'/>\n                    </Input>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>Telefone ou Celular</label>\n                    <Input icon value='16 98114-7732'>\n                      <input />\n                      <Icon name='check' color='green'/>\n                    </Input>\n                  </Form.Field>\n                </Form.Group>\n              </Form>\n            </Segment>\n            <Segment>\n              <Button fluid color='blue' onClick={this.handleClickOnEditUser2} loading={this.state.user.buttonLoading}>\n                Continuar<Icon name='arrow right'/>\n              </Button>\n            </Segment>\n          </Segment.Group>\n        )}\n      </>\n    )\n  }\n}\n\nexport default User"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAFA;AASA;AACA;;;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAzGA;AACA;AA2GA;;;;A","sourceRoot":""}